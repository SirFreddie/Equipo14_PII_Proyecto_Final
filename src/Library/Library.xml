<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library</name>
    </assembly>
    <members>
        <member name="T:Proyecto_Final.Buscador">
            <summary>
            
            </summary>
        </member>
        <member name="P:Proyecto_Final.Buscador.Content">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:Proyecto_Final.Buscador.ContentBuilder">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Proyecto_Final.Buscador.VerOfertasUbicacion(System.String)">
            <summary>
            En base a la ubicación del Emprendedor, retorna una lista con todas las ofertas que se encuentren a una distancia de 10km o menos; utilizando el LocationApi <see cref="T:Ucu.Poo.Locations.Client.LocationApiClient"/>.
            </summary>
        </member>
        <member name="M:Proyecto_Final.Buscador.VerOfertasPalabraClave(System.String)">
            <summary>
            En base a una palabra clave recibida, otorga todas las ofertas que tengan la misma palabra clave
            </summary>
            <param name="palabraClave"></param>
            <returns></returns>
        </member>
        <member name="T:Proyecto_Final.ConsoleInteraction">
            <summary>
            Clase encargada de interactuar con el usuario a travez de la consola.
            </summary>
        </member>
        <member name="M:Proyecto_Final.ConsoleInteraction.#ctor">
            <summary>
            Inicializa la clase ConsoleInteraction.
            </summary>
        </member>
        <member name="M:Proyecto_Final.ConsoleInteraction.CrearOferta">
            <summary>
            Interactua con el usuario para crear una oferta.
            </summary>
            <returns>Datos para crear la oferta/publicacion.</returns>
        </member>
        <member name="M:Proyecto_Final.ConsoleInteraction.AceptarInvitacion">
            <summary>
            Interactua con el usuario para aceptar la invitacion.
            </summary>
            <returns>Si se acepta la invitacion devuelve <c>true</c>, de lo contrario <c>false</c>.</returns>
        </member>
        <member name="M:Proyecto_Final.ConsoleInteraction.CrearDatosEmpresa">
            <summary>
            Interactua con el usuario para crear los datos respectivos de la empresa.
            </summary>
            <returns>Tupla de strings con los datos de la empresa.</returns>
        </member>
        <member name="M:Proyecto_Final.ConsoleInteraction.CrearDatosEmprendedor">
            <summary>
            Interactua con el usuario para crear los datos respectivos del Emprendedor.
            </summary>
            <returns>Tupla de strings con los datos del emprendedor</returns>
        </member>
        <member name="M:Proyecto_Final.ConsoleInteraction.CrearDatosHabilitacion">
            <summary>
            Interactua con el usuario para poder crear los datos de la habilitacion.
            </summary>
            <returns>Habilitacion.</returns>
        </member>
        <member name="M:Proyecto_Final.ConsoleInteraction.CrearDatosProducto">
            <summary>
            Interactua con el usuario para poder crear los datos del producto.
            </summary>
            <returns>Nombre, descripcion, ubicacion, valor y cantidad del producto.</returns>
        </member>
        <member name="M:Proyecto_Final.ConsoleInteraction.CrearDatosOferta">
            <summary>
            Interactua con el usuario para crear los datos de la publicacion.
            </summary>
            <returns>Nombre de la publicacion</returns>
        </member>
        <member name="M:Proyecto_Final.ConsoleInteraction.CrearDatosTipoProducto">
            <summary>
            Interactua con el usuario para crear los datos del tipo de producto.
            </summary>
            <returns>Tipo de producto.</returns>
        </member>
        <member name="M:Proyecto_Final.ConsoleInteraction.AgregarMsjClave">
            <summary>
            Interactua con el usuario para crear un mensaje clave en una oferta especifica.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Proyecto_Final.ConsoleInteraction.ConcretarOferta">
            <summary>
            Interactua con el usuario para concretar una oferta.
            </summary>
            <returns>Retorna <c>"Y"</c> si se concreta la oferta, de lo contrario retorna <c>"N"</c>.</returns>
        </member>
        <member name="M:Proyecto_Final.ConsoleInteraction.ImprimirVendidos(System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Imprime en consola los materiales y la cantidad vendida a lo largo de la historia.
            </summary>
            <param name="info"></param>
        </member>
        <member name="T:Proyecto_Final.Datos">
            <summary>
            Esta clase tiene como función almacenar datos de distintas clases y revisar que los datos ingresados sean los permitidos por el programa.
            </summary>
        </member>
        <member name="M:Proyecto_Final.Datos.ListaOfertas">
            <summary>
            Otorga una lista con todas las publicaciones realizadas.
            </summary>
            <returns>Lista con Oferta.</returns>
        </member>
        <member name="M:Proyecto_Final.Datos.AgregarOferta(Proyecto_Final.Oferta)">
            <summary>
            Agrega una oferta a la lista de publicaciones.
            </summary>
            <param name="oferta"></param>
        </member>
        <member name="M:Proyecto_Final.Datos.ListaUsuarioEmpresa">
            <summary>
            Otorga una lista con todos los UserEmpresa registrados en la aplicacion.
            </summary>
            <returns>Lista con UserEmpresa</returns>
        </member>
        <member name="M:Proyecto_Final.Datos.AgregarUsuarioEmpresa(Proyecto_Final.UserEmpresa)">
            <summary>
            Agrega un UserEmpresa a la aplicacion.
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:Proyecto_Final.Datos.ListaUsuarioEmprendedor">
            <summary>
            Otorga una lista con todos los UserEmprendedor registrados.
            </summary>
            <returns>Lista con UserEmprendedor</returns>
        </member>
        <member name="M:Proyecto_Final.Datos.AgregarUsuarioEmprendedor(Proyecto_Final.UserEmprendedor)">
            <summary>
            Agrega un UserEmprendedor a la aplicacion.
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:Proyecto_Final.Datos.ListaEmpresa">
            <summary>
            Lista con todas las Empresa registradas.
            </summary>
            <returns>Lista con Empresa</returns>
        </member>
        <member name="M:Proyecto_Final.Datos.AgregarEmpresa(Proyecto_Final.Empresa)">
            <summary>
            Agrega una empresa a la aplicacion.
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:Proyecto_Final.Datos.ListaOfertas">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Proyecto_Final.Datos.ListaHabilitaciones">
            <summary>
             Otorga una lista de habilitaciones registradas por el programa <see cref="T:Proyecto_Final.Habilitaciones"/>.
             </summary>
             <returns>Retorna la lista "listaHabilitaciones" de la clase "Datos".</returns>  
        </member>
        <member name="M:Proyecto_Final.Datos.ListaTipos">
            <summary>
            Otorga una lista de tipos de producto (plástico, tela, etc...) registradas por el programa <see cref="T:Proyecto_Final.TipoProducto"/>.
            </summary>
            <returns>Retorna la lista "listaTipos" de la clase "Datos".</returns>
        </member>
        <member name="M:Proyecto_Final.Datos.ListaRubros">
            <summary>
             Otorga una lista de rubros disponibles para asignarle a una empresa <see cref="T:Proyecto_Final.Rubro"/>.
             </summary>
             <returns>Retorna una lista "listaRubros" de la clase "Datos".</returns>//  
        </member>
        <member name="M:Proyecto_Final.Datos.AgregarHabilitacion(Proyecto_Final.Habilitaciones)">
            <summary>
            Agrega una habilitación a la lista de habilitaciones permitidas por el programa.
            </summary>
            <param name="habilitacion"></param>
        </member>
        <member name="M:Proyecto_Final.Datos.EliminarHabilitacion(Proyecto_Final.Habilitaciones)">
            <summary>
            Elimina una habilitación de la lista de habilitaciones permitidas por el programa.
            </summary>
            <param name="habilitacion"></param>
        </member>
        <member name="M:Proyecto_Final.Datos.AgregarRubro(Proyecto_Final.Rubro)">
            <summary>
            Agrega un rubro a la lista de rubros permitidos por el programa.
            </summary>
            <param name="rubro"></param>
        </member>
        <member name="M:Proyecto_Final.Datos.EliminarRubro(Proyecto_Final.Rubro)">
            <summary>
            Elimina un rubro de la lista de rubros permitidos por el programa.
            </summary>
            <param name="rubro"></param>
        </member>
        <member name="M:Proyecto_Final.Datos.AgregarTipo(Proyecto_Final.TipoProducto)">
            <summary>
            Agrega un tipo de producto a la lista de tipos de productos permitidos por el programa.
            </summary>
            <param name="tipo"></param>
        </member>
        <member name="M:Proyecto_Final.Datos.EliminarTipo(Proyecto_Final.TipoProducto)">
            <summary>
            Elimina un tipo de producto de la lista de tipos de productos permitidos por el programa.
            </summary>
            <param name="tipo"></param>
        </member>
        <member name="M:Proyecto_Final.Datos.AgregarOfertas(Proyecto_Final.Oferta)">
            <summary>
            Agrega una oferta de la lista de ofertas.
            </summary>
            <param name="oferta"></param>
        </member>
        <member name="M:Proyecto_Final.Datos.EliminarOfertas(Proyecto_Final.Oferta)">
            <summary>
            Elimina una oferta de la lista de ofertas.
            </summary>
            <param name="oferta"></param>
        </member>
        <member name="M:Proyecto_Final.Datos.CheckHabilitaciones(System.String)">
            <summary>
            Revisa si la habilitación que el usuario quiere asignarse existe dentro de las habilitaciones permitidas por el programa.
            </summary>
            <param name="habilitacion"></param>
            <returns><c>true</c>Si la habilitación a agregar concuerda con las existentes en el programa,<c>false</c> en caso contrario.</returns>
        </member>
        <member name="M:Proyecto_Final.Datos.CheckTipos(System.String)">
            <summary>
            Revisa si el tipo de producto que el usuario quiere asignar al producto existe dentro de los tipos de productos permitidos por el programa.
            </summary>
            <param name="tipoProducto"></param>
            <returns><c>true</c>Si el tipo de producto a agregar concuerda con los existentes en el programa,<c>false</c> en caso contrario.</returns>
        </member>
        <member name="M:Proyecto_Final.Datos.CheckRubros(System.String)">
            <summary>
            Revisa si el rubro que el usuario quiere asignar a una empresa existe dentro de los rubros permitidos por el programa.
            </summary>
            <param name="rubro"></param>
            <returns><c>true</c>Si el rubro a agregar concuerda con los existentes en el programa,<c>false</c> en caso contrario.</returns>
        </member>
        <member name="T:Proyecto_Final.Emprendedor">
            <summary>
            Esta clase representa los datos adicionales del emprendedor.
            </summary>
        </member>
        <member name="P:Proyecto_Final.Emprendedor.Ubicacion">
            <summary>
            Otorga la ubicación del Emprendedor
            </summary>
            <value>Ubicación del Emprendedor</value>
        </member>
        <member name="P:Proyecto_Final.Emprendedor.Rubro">
            <summary>
            Otorga una instancia de objeto "Rubro" del Emprendedor
            </summary>
            <value>Objeto de tipo "Rubro".</value>
        </member>
        <member name="P:Proyecto_Final.Emprendedor.Especializaciones">
            <summary>
            Otorga una lista de strings que representan las especializaciones del Emprendedor.
            </summary>
            <value></value>
        </member>
<<<<<<< HEAD
        <member name="P:Proyecto_Final.Emprendedor.Compras">
            <summary>
            Otorga una lista de los productos consumidos por el emprendedor.
            </summary>
            <value>ArrayList "compras".</value>
        </member>
        <member name="M:Proyecto_Final.Emprendedor.#ctor(System.String,Proyecto_Final.Rubro)">
=======
        <member name="M:Proyecto_Final.Emprendedor.#ctor(System.String,Proyecto_Final.Rubro,Proyecto_Final.Habilitaciones)">
>>>>>>> 111739d956e2df35f290576dff0ca12e066658c4
            <summary>
            Inicializa la clase Emprendedor
            </summary>
            <param name="ubicacion"></param>
            <param name="rubro"></param>
        </member>
        <member name="M:Proyecto_Final.Emprendedor.AgregarEspecializacion">
            <summary>
            Agrega una Especialización al Emprendedor.
            </summary>
        </member>
        <member name="M:Proyecto_Final.Emprendedor.EliminarEspecializacion">
            <summary>
            Elimina una Especialización al Emprendedor.
            </summary>
        </member>
        <member name="M:Proyecto_Final.Emprendedor.ConsumoxTiempo">
            <summary>
            
            </summary>
        </member>
        <member name="T:Proyecto_Final.Empresa">
            <summary>
            Esta clase representa a la Empresa.
            </summary>
        </member>
        <member name="P:Proyecto_Final.Empresa.Nombre">
            <summary>
            Obtiene un valor del nombre de la Empresa.
            </summary>
            <value>Nombre de la empresa.</value>
        </member>
        <member name="P:Proyecto_Final.Empresa.Ubicacion">
            <summary>
            Obtiene un valor de la ubocacion de la Empresa.
            </summary>
            <value>Ubicacion de la empresa.</value>
        </member>
        <member name="P:Proyecto_Final.Empresa.Rubro">
            <summary>
            Obtiene un valor del Rubro de la empresa.
            </summary>
            <value>Objeto del tipo Rubro.</value>
        </member>
        <member name="P:Proyecto_Final.Empresa.Especializaciones">
            <summary>
            Obtiene un valor de las especializaciones de la empresa.
            </summary>
            <value>Lista de especializaciones.</value>
        </member>
        <member name="P:Proyecto_Final.Empresa.Ofertas">
            <summary>
            Obtiene un valor de las ofertaas publicadas de la empresa.
            </summary>
            <value>Lista con ofertas publicadas por la empresa.</value>
        </member>
        <member name="M:Proyecto_Final.Empresa.#ctor(System.String,System.String,Proyecto_Final.Rubro)">
            <summary>
            Inicializa la clase Empresa.
            </summary>
            <param name="nombre"></param>
            <param name="ubicacion"></param>
            <param name="rubro"></param>
        </member>
        <member name="M:Proyecto_Final.Empresa.AgregarMsjClave(System.ValueTuple{System.String,System.String})">
            <summary>
            Agrega una palabra clave a una publicacion determinada.
            </summary>
            <param name="datosMensaje"></param>
        </member>
        <member name="M:Proyecto_Final.Empresa.AgregarEspecializacion(System.String)">
            <summary>
            Agrega una especializacion a la empresa y la guarda en un array.
            </summary>
            <param name="especializacion"></param>
        </member>
        <member name="M:Proyecto_Final.Empresa.VerificarVentas">
            <summary>
            Como empresa, quiero saber todos los materiales o residuos entregados en un período de tiempo, para de esa forma tener un seguimiento de su reutilización.
            </summary>
            <returns>Retorna un diccionario con los datos de las ventas</returns>
        </member>
        <member name="T:Proyecto_Final.Habilitaciones">
            <summary>
            Esta clase representa las habilitaciones necesarias para la tenencia de productos.
            </summary>
        </member>
        <member name="P:Proyecto_Final.Habilitaciones.Habilitacion">
            <summary>
            Otorga el nombre de la Habilitación.
            </summary>
            <value>Nombre de la Habilitación.</value>
        </member>
        <member name="M:Proyecto_Final.Habilitaciones.#ctor(System.String)">
            <summary>
            Inicializa la clase habilitaciones.
            </summary>
            <param name="habilitacion"></param>
        </member>
        <member name="T:Proyecto_Final.IPersistenciaDatos">
            <summary>
            Esta clase permite guardar y cargar información.
            </summary>
        </member>
        <member name="M:Proyecto_Final.IPersistenciaDatos.CargarInfo(System.String)">
            <summary>
            Permite cargar información en base a un string.
            </summary>
            <param name="info"></param> 
        </member>
        <member name="M:Proyecto_Final.IPersistenciaDatos.GuardarInfo">
            <summary>
            Permite guardar información al transformarla a un string.
            </summary>
            <returns>Retorna un string</returns>
        </member>
        <member name="T:Proyecto_Final.Habilitaciones">
            <summary>
            Esta clase representa las habilitaciones necesarias para la tenencia de productos.
            </summary>
        </member>
        <member name="P:Proyecto_Final.Habilitaciones.Habilitacion">
            <summary>
            Otorga el nombre de la Habilitación.
            </summary>
            <value>Nombre de la Habilitación.</value>
        </member>
        <member name="M:Proyecto_Final.Habilitaciones.#ctor(System.String)">
            <summary>
            Inicializa la clase habilitaciones.
            </summary>
            <param name="habilitacion"></param>
        </member>
        <member name="T:Proyecto_Final.IUserInterface">
            <summary>
            Esta interface permite implementar distintas formas de que el usuario interactue con el bot.
            </summary>
        </member>
        <member name="M:Proyecto_Final.IUserInterface.CrearOferta">
            <summary>
            Interactua con el usuario para crear una oferta.
            </summary>
            <returns><c>string</c></returns>
        </member>
        <member name="M:Proyecto_Final.IUserInterface.AceptarInvitacion">
            <summary>
            Interactua con el usuario para aceptar la invitacion.
            </summary>
            <returns>Si se acepta la invitacion, devuelve una "Y", si no, devuelve una "N".</returns>
        </member>
        <member name="M:Proyecto_Final.IUserInterface.CrearDatosEmpresa">
            <summary>
            Interactua con el usuario para crear los datos respectivos de la empresa.
            </summary>
            <returns>Tupla de strings con los datos de la empresa.</returns>
        </member>
        <member name="M:Proyecto_Final.IUserInterface.CrearDatosHabilitacion">
            <summary>
            Interactua con el usuario para poder crear los datos de la habilitacion.
            </summary>
            <returns>Habilitacion.</returns>
        </member>
        <member name="M:Proyecto_Final.IUserInterface.CrearDatosProducto">
            <summary>
            Interactua con el usuario para poder crear los datos del producto.
            </summary>
            <returns>Nombre, descripcion, ubicacion, valor y cantidad del producto.</returns>
        </member>
        <member name="M:Proyecto_Final.IUserInterface.CrearDatosOferta">
            <summary>
            Interactua con el usuario para crear los datos de la publicacion.
            </summary>
            <returns>Nombre de la publicacion</returns>
        </member>
        <member name="M:Proyecto_Final.IUserInterface.CrearDatosTipoProducto">
            <summary>
            Interactua con el usuario para crear los datos del tipo de producto.
            </summary>
            <returns>Tipo de producto</returns>
        </member>
        <member name="M:Proyecto_Final.IUserInterface.AgregarMsjClave">
            <summary>
            Interactua con el usuario para agregar palabras claves a una oferta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Proyecto_Final.IUserInterface.ConcretarOferta">
            <summary>
            Interactua con el usuario para concretar una oferta.
            </summary>
            <returns>Retorna <c>true</c> si se concreta la oferta, de lo contrario retorna <c>false</c>.</returns>
        </member>
        <member name="M:Proyecto_Final.IUserInterface.ImprimirVendidos(System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Imprime en consola los materiales y la cantidad vendida a lo largo de la historia.
            </summary>
            <param name="item"></param>
        </member>
<<<<<<< HEAD
=======
        <member name="T:Proyecto_Final.Invitacion">
            <summary>
            Esta clase representa una invitacion.
            </summary>
        </member>
        <member name="M:Proyecto_Final.Invitacion.#ctor">
            <summary>
            Inicializa la clase Invitacion.
            </summary>
        </member>
>>>>>>> 111739d956e2df35f290576dff0ca12e066658c4
        <member name="T:Proyecto_Final.Oferta">
            <summary>
            Esta clase representa las ofertas creadas por un empresario.
            </summary>
        </member>
        <member name="P:Proyecto_Final.Oferta.Nombre">
            <summary>
            Otorga el nombre de la Oferta
            </summary>
            <value></value>
        </member>
        <member name="P:Proyecto_Final.Oferta.Product">
            <summary>
            Otorga un objeto del Producto que se está ofertando <see cref="T:Proyecto_Final.Producto"/>.
            </summary>
            <value>Objeto del tipo "Producto".</value>
        </member>
        <member name="P:Proyecto_Final.Oferta.PalabrasClave">
            <summary>
            Otorga una lista de strings "Palabras Clave" que pueden utilizarse para buscar la oferta.
            </summary>
            <value>Retorna la lista "palabrasClave".</value>
        </member>
        <member name="P:Proyecto_Final.Oferta.HabilitacionesOferta">
            <summary>
            Otorga las habilitaciones requeridas para que un emprendedor pueda aceptar la oferta <see cref="T:Proyecto_Final.Habilitaciones"/>.
            </summary>
            <value>Objeto del tipo Habilitaciones.</value>
        </member>
        <member name="P:Proyecto_Final.Oferta.IsVendido">
            <summary>
<<<<<<< HEAD
            Otorga un valor que indica si la oferta fue concretada o no.
            </summary>
            <value><c>true</c>Si la oferta fue concretada,<c>false</c> en caso contrario.</value>
=======
            Otorga un valor booleano dependiendo de si la oferta fue vendida o no.
            </summary>
            <value>Retorna un valor booleano</value>
        </member>
        <member name="P:Proyecto_Final.Oferta.Comprador">
            <summary>
            Otorga un valor que representa al compradord de la oferta.
            </summary>
            <value></value>
>>>>>>> 111739d956e2df35f290576dff0ca12e066658c4
        </member>
        <member name="M:Proyecto_Final.Oferta.#ctor(System.String,Proyecto_Final.Producto,Proyecto_Final.Habilitaciones)">
            <summary>
            Inicializa la clase Oferta.
            </summary>
            <param name="nombre"></param>
            <param name="product"></param>
            <param name="habilitacionesOferta"></param>
        </member>
        <member name="M:Proyecto_Final.Oferta.AgregarMsjClave(System.String)">
            <summary>
            Agrega una palabra clave a la listas de palabras clave de la oferta.
            </summary>
            <param name="palabra"></param>
        </member>
        <member name="T:Proyecto_Final.Producto">
            <summary>
            Esta clase representa al producto que se ofertará.
            </summary>
        </member>
        <member name="P:Proyecto_Final.Producto.Nombre">
            <summary>
            Otorga el nombre del producto.
            </summary>
            <value>Nombre del producto.</value>
        </member>
        <member name="P:Proyecto_Final.Producto.Descripcion">
            <summary>
            Otorga una descripción breve del producto.
            </summary>
            <value>Descripción del Producto.</value>
        </member>
        <member name="P:Proyecto_Final.Producto.Ubicacion">
            <summary>
            Otorga una ubicación en la que se encuentra el producto.
            </summary>
            <value>Ubicación del Producto</value>
        </member>
        <member name="P:Proyecto_Final.Producto.Valor">
            <summary>
            Otorga el valor monetario del producto.
            </summary>
            <value>Valor del producto.</value>
        </member>
        <member name="P:Proyecto_Final.Producto.Cantidad">
            <summary>
            Otorga la cantidad ofertable del producto.
            </summary>
            <value>Cantidad del producto.</value>
        </member>
        <member name="P:Proyecto_Final.Producto.Tipo">
            <summary>
            Otorga un objeto "TipoProducto" que representa el tipo de producto <see cref="T:Proyecto_Final.TipoProducto"/>.
<<<<<<< HEAD
            </summary>
            <value>Objeto del tipo "TipoProducto".</value>
        </member>
        <member name="M:Proyecto_Final.Producto.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,Proyecto_Final.TipoProducto)">
            <summary>
            Inicializa la clase Producto.
            </summary>
            <param name="nombre"></param>
            <param name="descripcion"></param>
            <param name="tipo"></param>
            <param name="ubicacion"></param>
            <param name="valor"></param>
            <param name="cantidad"></param>
        </member>
        <member name="T:Proyecto_Final.Rubro">
            <summary>
            Esta clase representa el rubro de una empresa.
            </summary>
        </member>
        <member name="P:Proyecto_Final.Rubro.Rubros">
            <summary>
            Retorna el nombre del rubro de una empresa.
            </summary>
=======
            </summary>
            <value>Objeto del tipo "TipoProducto".</value>
        </member>
        <member name="M:Proyecto_Final.Producto.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,Proyecto_Final.TipoProducto)">
            <summary>
            Inicializa la clase Producto.
            </summary>
            <param name="nombre"></param>
            <param name="descripcion"></param>
            <param name="tipo"></param>
            <param name="ubicacion"></param>
            <param name="valor"></param>
            <param name="cantidad"></param>
        </member>
        <member name="T:Proyecto_Final.Rubro">
            <summary>
            Esta clase representa el rubro de una empresa.
            </summary>
        </member>
        <member name="P:Proyecto_Final.Rubro.Rubros">
            <summary>
            Retorna el nombre del rubro de una empresa.
            </summary>
>>>>>>> 111739d956e2df35f290576dff0ca12e066658c4
            <value>Nombre del rubro de la empresa.</value>
        </member>
        <member name="M:Proyecto_Final.Rubro.#ctor(System.String)">
            <summary>
            Inicializa la clase rubro.
            </summary>
            <param name="rubro"></param>
<<<<<<< HEAD
        </member>
        <member name="T:Proyecto_Final.Singleton`1">
            <summary>
            Esta clase tiene como función funcionar como base para crear una sola instancia de clases almacenadoras de datos en el programa.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Proyecto_Final.Singleton`1.Instance">
            <summary>
            Otorga una instancia de la clase que sea Singleton.
            </summary>
            <value><c>true</c>Crea una instancia de la clase Singleton y la retorna,<c>false</c> solo retorna la instancia de clase ya existente.</value>
        </member>
        <member name="T:Proyecto_Final.TipoProducto">
            <summary>
            Esta clase representa una clasificación general de un producto.
            </summary>
        </member>
        <member name="P:Proyecto_Final.TipoProducto.Nombre">
            <summary>
            Otorga el nombre del tipo de clasificación del producto.
            </summary>
            <value>Nombre del tipo de producto.</value>
        </member>
        <member name="M:Proyecto_Final.TipoProducto.#ctor(System.String)">
            <summary>
            Inicializa la clase TipoProducto.
            </summary>
            <param name="tipo"></param>
        </member>
        <member name="T:Proyecto_Final.UserAdmin">
            <summary>
            Esta clase representa a los administradores del programa.
            </summary>
        </member>
        <member name="P:Proyecto_Final.UserAdmin.Nombre">
            <summary>
            Otorga el nombre de usuario del administrador.
            </summary>
            <value>Nombre de usuario del administrador</value>
        </member>
        <member name="M:Proyecto_Final.UserAdmin.#ctor(System.String)">
            <summary>
            Inicializa la clase UserAdmin.
            </summary>
            <param name="nombre"></param>
=======
>>>>>>> 111739d956e2df35f290576dff0ca12e066658c4
        </member>
        <member name="T:Proyecto_Final.Singleton`1">
            <summary>
            Esta clase tiene como función funcionar como base para crear una sola instancia de clases almacenadoras de datos en el programa.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Proyecto_Final.Singleton`1.Instance">
            <summary>
            Otorga una instancia de la clase que sea Singleton.
            </summary>
            <value><c>true</c>Crea una instancia de la clase Singleton y la retorna,<c>false</c> solo retorna la instancia de clase ya existente.</value>
        </member>
        <member name="T:Proyecto_Final.TipoProducto">
            <summary>
            Esta clase representa una clasificación general de un producto.
            </summary>
        </member>
        <member name="P:Proyecto_Final.TipoProducto.Nombre">
            <summary>
            Otorga el nombre del tipo de clasificación del producto.
            </summary>
            <value>Nombre del tipo de producto.</value>
        </member>
        <member name="M:Proyecto_Final.TipoProducto.#ctor(System.String)">
            <summary>
            Inicializa la clase TipoProducto.
            </summary>
            <param name="tipo"></param>
        </member>
        <member name="T:Proyecto_Final.UserAdmin">
            <summary>
            Esta clase representa a los administradores del programa.
            </summary>
        </member>
        <member name="P:Proyecto_Final.UserAdmin.Nombre">
            <summary>
            Otorga el nombre de usuario del administrador.
            </summary>
            <value>Nombre de usuario del administrador</value>
        </member>
        <member name="M:Proyecto_Final.UserAdmin.#ctor(System.String)">
            <summary>
            Inicializa la clase UserAdmin.
            </summary>
            <param name="nombre"></param>
        </member>
        <member name="M:Proyecto_Final.UserAdmin.InvitarEmpresa(System.String)">
            <summary>
            Invita a una empresa desde cualquier IUserInterface siempre y cuando esta empresa no haya sido invitada.
            </summary>
            <param name="nombreUserEmpresa"></param>
        </member>
        <member name="T:Proyecto_Final.UserEmprendedor">
            <summary>
            Esta clase representa a los usuarios emprendedores en el sistema.
            </summary>
        </member>
        <member name="P:Proyecto_Final.UserEmprendedor.Nombre">
            <summary>
            Otorga el nombre del Emprendedor.
            </summary>
            <value>Nombre del Emprendedor.</value>
        </member>
        <member name="P:Proyecto_Final.UserEmprendedor.Emprendedor">
            <summary>
            Otorga los datos existentes en el objeto Emprendedor <see cref="P:Proyecto_Final.UserEmprendedor.Emprendedor"/>.
            </summary>
            <value></value>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.#ctor(System.String)">
            <summary>
            Inicializa la clase UserEmprendedor.
            </summary>
            <param name="nombre"></param>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.RegistrarEmprendedor(Proyecto_Final.IUserInterface)">
            <summary>
            Registra el Emprendedor.
            </summary>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.AgregarEspecializacion">
            <summary>
            Agrega a la lista de especializaciones que contiene la clase "Emprendedor" una especialización.
            </summary>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.EliminarEspecializacion">
            <summary>
            Elimina de la lista de especializaciones que contiene la clase "Emprendedor una especialización.
            </summary>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.EnviarMsj">
            <summary>
            
            </summary>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.VerOfertasPalabraClave">
            <summary>
            
            </summary>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.VerOfertasUbicacion">
            <summary>
            
            </summary>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.CargarInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.GuardarInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:Proyecto_Final.UserEmprendedor">
            <summary>
            Esta clase representa a los usuarios emprendedores en el sistema.
            </summary>
        </member>
        <member name="P:Proyecto_Final.UserEmprendedor.Nombre">
            <summary>
            Otorga el nombre del Emprendedor.
            </summary>
            <value>Nombre del Emprendedor.</value>
        </member>
        <member name="P:Proyecto_Final.UserEmprendedor.Emprendedor">
            <summary>
            Otorga los datos existentes en el objeto Emprendedor <see cref="P:Proyecto_Final.UserEmprendedor.Emprendedor"/>.
            </summary>
            <value></value>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.#ctor(System.String)">
            <summary>
            Inicializa la clase UserEmprendedor.
            </summary>
            <param name="nombre"></param>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.AgregarEspecializacion">
            <summary>
            Agrega a la lista de especializaciones que contiene la clase "Emprendedor" una especialización.
            </summary>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.EliminarEspecializacion">
            <summary>
            Elimina de la lista de especializaciones que contiene la clase "Emprendedor una especialización.
            </summary>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.SetEmprendedor(Proyecto_Final.Emprendedor)">
            <summary>
            DEBUG: Setea un emprendedor al usuario
            </summary>
            <param name="emprendedor"></param>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.VerOfertasPalabraClave(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Proyecto_Final.UserEmprendedor.VerOfertasUbicacion">
            <summary>
            
            </summary>
        </member>
        <member name="T:Proyecto_Final.UserEmpresa">
            <summary>
            Esta clase representa al usuario de la Empresa.
            </summary>
        </member>
        <member name="P:Proyecto_Final.UserEmpresa.Invitacion">
            <summary>
            Obtiene un valor del objeto Invitacion.
            </summary>
            <value>Devuelve una invitacion si la tiene, sino, <c>null</c></value>
        </member>
        <member name="P:Proyecto_Final.UserEmpresa.Nombre">
            <summary>
            Obtiene un valor del nombre del usuario empresa.
            </summary>
            <value>Nombre de la empresa</value>
        </member>
        <member name="P:Proyecto_Final.UserEmpresa.Empresa">
            <summary>
            Obtiene un valor del objeto Empresa.
            </summary>
            <value>Objeto del tipo Empresa</value>
        </member>
        <member name="P:Proyecto_Final.UserEmpresa.IsInvited">
            <summary>
            Obtiene un valor booleano dependiendo de si la empresa fue invitada o no.
            </summary>
            <value><c>true/false</c></value>
        </member>
        <member name="M:Proyecto_Final.UserEmpresa.#ctor(System.String)">
            <summary>
            Inicializa la clase UserEmpresa.
            </summary>
            <param name="nombre"></param>
        </member>
        <member name="M:Proyecto_Final.UserEmpresa.AceptarInvitacion(System.String)">
            <summary>
            Como empresa, quiero aceptar una invitación a unirme en la plataforma y registrar mi nombre, ubicación y rubro, para que de esa forma pueda comenzar a publicar ofertas.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Proyecto_Final.UserEmpresa.CrearEmpresa(System.String,System.String,System.String)">
            <summary>
            El usuario puede crear la empresa.
            </summary>
            <param name="nombre"></param>
            <param name="ubicacion"></param>
            <param name="rubro"></param>
        </member>
        <member name="M:Proyecto_Final.UserEmpresa.CrearMsjClave(System.ValueTuple{System.String,System.String})">
            <summary>
            Como empresa, quiero indicar un conjunto de palabras claves asociadas a la publicación de los materiales, para que de esa forma sea más fácil de encontrarlos en las búsquedas que hacen los emprendedores.
            </summary>
            <param name="datosMensaje"></param>
        </member>
        <member name="M:Proyecto_Final.UserEmpresa.CrearOferta(System.String,System.String,System.ValueTuple{System.String,System.String,System.String,System.Int32,System.Int32},System.String)">
            <summary>
            Como empresa, quiero publicar una oferta de materiales reciclables o residuos, para que de esa forma los emprendedores que lo necesiten puedan reutilizarlos.
            </summary>
            <param name="datosOferta"></param>
            <param name="datosHabilitacion"></param>
            <param name="datosProducto"></param>
            <param name="datosTipoProducto"></param>
        </member>
        <member name="M:Proyecto_Final.UserEmpresa.CrearProducto(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Como empresa, quiero clasificar los materiales o residuos, indicar su cantidad y unidad, el valor (en $ o U$S) de los mismos y el lugar donde se ubican, para que de esa forma los emprendedores tengan información de materiales o residuos disponibles.
            </summary>
            <param name="nombre"></param>
            <param name="descripcion"></param>
            <param name="ubicacion"></param>
            <param name="valor"></param>
            <param name="cantidad"></param>
            <param name="datosTipoProducto"></param>
            <returns></returns>
        </member>
        <member name="M:Proyecto_Final.UserEmpresa.ConcretarOferta(System.String,System.String,System.String)">
            <summary>
            Cambia el estado de la oferta especifica a vendido.
            </summary>
            <param name="input"></param>
            <param name="nombreOferta"></param>
            <param name="nombreEmprendedor"></param>
        </member>
        <member name="M:Proyecto_Final.UserEmpresa.VerificarVentas">
            <summary>
            Como empresa, quiero saber todos los materiales o residuos entregados en un período de tiempo, para de esa forma tener un seguimiento de su reutilización.
            </summary>
            <returns>Retorna un diccionario con los datos de las ventas</returns>
        </member>
    </members>
</doc>
